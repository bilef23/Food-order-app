@model List<FoodHub.Models.DTO.RandomMealDTO> 


<main>
    
    <style>


                .slide {
                    position: absolute;
                    opacity: 0;
                    transition: ease-in-out;
                    width: 100%;

                }

                .button-container {
                    text-align: center;
                   margin: 20px auto;
                }


                    .button {
                    position:relative;
                    top:5vh;
                    margin: 5px;
                    padding: 1% 3%;
                    cursor: pointer;
                    margin: 50%;
                    border-radius:10px 10px;
                }

                .content-wrapper {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    justify-content: center;
                    height: 100vh; /* Adjust the height as needed */
                }
                .imgMeals{
                    width:50vw;
                    height:35vw;
                }
        .btn-custom-success {
            background-color: #433E49; /* Green color for success button */
            color: white; /* Text color */
        }

        .btn-custom-danger {
            background-color: #433E49; /* Red color for danger button */
            color:white /* Text color */
        }
}
    </style>
       
            <body>

                <div class="container d-flex justify-content-center">
                    @foreach (var meal in Model)
                    {
                        <div class="slide d-flex justify-content-center m-4">
                         
                            <img class="imgMeals" src="@Url.Content(meal.urlImage)">

                        </div>
                    }

                </div>
              
                <div class="container d-flex justify-content-center">
                    <button  class="button btn btn-dark btn-sm js-stop" id="stopBtn" style="background-color:#433E49; font-size: 3vw; " onclick="stopSlideshow()" >Stop</button>
                </div>

                <script>
                    const slides = document.querySelectorAll('.slide');
                    const stopBtn = document.getElementById('stopBtn');
                    let currentIndex = 0;
                    let interval;
                    var myList = @Html.Raw(Json.Encode(Model));
                    function showSlide(index) {
                        slides.forEach((slide, i) => {
                            if (i === index) {
                                slide.style.opacity = '1';
                            } else {
                                slide.style.opacity = '0';
                            }
                        });
                    }


                    function nextSlide() {
                        currentIndex = (currentIndex + 1) % slides.length;
                        showSlide(currentIndex);
                    }

                    function startSlideshow() {
                        console.log(myList)
                        interval = setInterval(nextSlide, 130);
                        // Change slide every 1 second
                    }

                    function stopSlideshow() {
                            clearInterval(interval);

                            bootbox.confirm({
                                message: "Are you sure you want to order " + myList[currentIndex].name + "?",
                                buttons: {
                                    confirm: {
                                        label: 'Yes',
                                        className: 'btn-custom-success' // Use custom success button class
                                    },
                                    cancel: {
                                        label: 'No',
                                        className: 'btn-custom-danger' // Use custom danger button class
                                    }
                                },
                                callback: function (result) {
                                    if (result) {
                                        window.location.href = '@Url.Action("showRestaurants", "Restaurant")' + '?id=' + myList[currentIndex].MealId;
                                    } else {
                                        currentIndex = (currentIndex + 1) % slides.length;
                                        startSlideshow();
                                    }
                                }
                            });
                        }




                    showSlide(currentIndex);
                    startSlideshow();
                </script>
            </body>


</div>
</main>